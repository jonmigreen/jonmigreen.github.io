{"version":3,"sources":["components/Row.js","components/Table.js","pages/HomePage.js","pages/CreatePage.js","pages/EditPage.js","components/nav.js","App.js","reportWebVitals.js","index.js"],"names":["Exercise","exercise","onDelete","onEdit","name","reps","weight","unit","date","onClick","_id","ExerciseList","exercises","id","map","i","HomePage","setExerciseToEdit","useState","setExercise","history","useHistory","a","fetch","method","response","status","filter","e","console","error","loadExercise","json","data","useEffect","push","CreatePage","setName","setReps","setWeight","setUnit","setDate","addExercise","newExercise","body","JSON","stringify","headers","Swal","fire","icon","text","color","confirmButtonColor","className","type","placeholder","autoFocus","value","onChange","target","EditPage","exerciseToEdit","editExercise","editedExercise","required","navbar","to","App","style","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04ad1570.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MdDeleteForever, MdEdit } from 'react-icons/md';  \r\n\r\nfunction Exercise({ exercise, onDelete, onEdit}) {\r\n    return (\r\n       \r\n        <tr>\r\n            <td>{exercise.name}</td>\r\n            <td>{exercise.reps}</td>\r\n            <td>{exercise.weight}</td>\r\n            <td>{exercise.unit}</td>\r\n            <td>{exercise.date}</td>\r\n            <td><MdEdit onClick={() => onEdit(exercise)} /></td>\r\n            <td><MdDeleteForever onClick={() => onDelete(exercise._id)} /></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Exercise;","import React from 'react';\r\nimport Exercise from './Row';\r\n\r\nfunction ExerciseList({ exercises, onDelete, onEdit }) {\r\n    return (\r\n        <table id=\"exercises\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Reps</th>\r\n                    <th>Weight</th>\r\n                    <th>Unit</th>\r\n                    <th>Date</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {exercises.map((exercise, i) => <Exercise exercise={exercise}\r\n                    onDelete={onDelete}\r\n                    onEdit={onEdit}\r\n                    key={i} />)}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default ExerciseList;\r\n","import React from 'react';\r\nimport ExerciseList from '../components/Table';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction HomePage({ setExerciseToEdit }) {\r\n\r\n    const [exercises, setExercise] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const onDelete = async _id => {\r\n        const response = await fetch(`/exercises/${_id}`, {method: 'DELETE'});\r\n        if(response.status === 204){\r\n            setExercise(exercises.filter( e => e._id !== _id));\r\n        } else {\r\n            console.error(`Failed to delete exercise with _id = ${_id}, status code = ${response.status}`); \r\n        }\r\n    };\r\n\r\n    const onEdit = exercise => {\r\n        setExerciseToEdit(exercise);\r\n        history.push(\"/edit\");\r\n\r\n    }\r\n\r\n    const loadExercise = async () => {\r\n        const response = await fetch('/exercises');\r\n        const data = await response.json();\r\n        setExercise(data);\r\n    }\r\n\r\n    useEffect( () => {\r\n        loadExercise();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <ExerciseList exercises={exercises} onDelete={onDelete} onEdit={onEdit}></ExerciseList>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const CreatePage = () => {\r\n\tconst [name, setName] = useState('');\r\n\tconst [reps, setReps] = useState('');\r\n\tconst [weight, setWeight] = useState('');\r\n\tconst [unit, setUnit] = useState('lbs');\r\n\tconst [date, setDate] = useState('');\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst addExercise = async () => {\r\n\t\tconst newExercise = { name, reps, weight, unit, date };\r\n\t\tconst response = await fetch('/exercises', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(newExercise),\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t});\r\n\t\tif (response.status === 201) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ticon: 'success',\r\n\t\t\t\ttext:'Successfully added the exercise',\r\n\t\t\t\tcolor: '#16123f',\r\n\t\t\t\tconfirmButtonColor: '#16123f'\r\n\t\t});\r\n\r\n\t\t} else {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\ttext:`Failed to add exercise, status code  = ${response.status}`,\r\n\t\t\t\tcolor: '#16123f',\r\n\t\t\t\tconfirmButtonColor: '#16123f'\r\n\t\t});\r\n\t\t}\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"title\">Add an exercise to the log:</h1>\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Reps</th>\r\n\t\t\t\t\t\t<th>Weight</th>\r\n\t\t\t\t\t\t<th>Unit</th>\r\n\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Description\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Reps\"\r\n\t\t\t\t\t\t\t\tvalue={reps}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setReps(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Weight\"\r\n\t\t\t\t\t\t\t\tvalue={weight}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setWeight(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tvalue={unit}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setUnit(e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"lbs\">lbs</option>\r\n\t\t\t\t\t\t\t\t<option value=\"kgs\">kgs</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tvalue={date}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<button onClick={addExercise}>Save</button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CreatePage;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const EditPage = ({ exerciseToEdit }) => {\r\n\tconst [name, setName] = useState(exerciseToEdit.name);\r\n\tconst [reps, setReps] = useState(exerciseToEdit.reps);\r\n\tconst [weight, setWeight] = useState(exerciseToEdit.weight);\r\n\tconst [unit, setUnit] = useState(exerciseToEdit.unit);\r\n\tconst [date, setDate] = useState(exerciseToEdit.date);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst editExercise = async () => {\r\n\t\tconst editedExercise = { name, reps, weight, unit, date };\r\n\t\tconst response = await fetch(`/exercises/${exerciseToEdit._id}`, {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tbody: JSON.stringify(editedExercise),\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t});\r\n\t\tif (response.status === 200) {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ticon: 'success',\r\n\t\t\t\ttext:'Successfully edited the exercise',\r\n\t\t\t\tcolor: '#16123f',\r\n\t\t\t\tconfirmButtonColor: '#16123f'\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tSwal.fire({\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\ttext:`Failed to edit the exercise, status code  = ${response.status}`,\r\n\t\t\t\tcolor: '#16123f',\r\n\t\t\t\tconfirmButtonColor: '#16123f'\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"title\">Edit your exercise: </h1>\r\n\t\t\t<table>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Reps</th>\r\n\t\t\t\t\t\t<th>Weight</th>\r\n\t\t\t\t\t\t<th>Unit</th>\r\n\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tvalue={reps}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setReps(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tvalue={weight}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setWeight(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\tvalue={unit}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setUnit(e.target.value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<option value=\"lbs\">lbs</option>\r\n\t\t\t\t\t\t\t\t<option value=\"kgs\">kgs</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tvalue={date}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<button onClick={editExercise}>Save</button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n\nconst navbar= () =>{\n  return (\n    <div id=\"NavContainer\">\n      <nav id=\"navbar\">\n        <ul> \n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/add\">Add</Link>\n          </li>\n        </ul>\n        </nav>\n      </div>\n  );\n}\nexport default navbar;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AddPage from './pages/CreatePage';\nimport EditPage from './pages/EditPage';\nimport Navigation from './components/nav.js';\nimport { useState } from 'react';\n\nfunction App() {\n\tconst [exerciseToEdit, setExerciseToEdit] = useState();\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t\n        \t\t<div className=\"sticky\">\n\t\t\t\t\t<Navigation />\n\t\t\t\t</div>\n\t\t\t\t<section>\n\t\t\t\t\t<header id=\"App-header\">\n\t\t\t\t\t\t<h1> TRAXALOT </h1>\n\t\t\t\t\t\t<p id=\"header-intro\">\n\t\t\t\t\t\t\tA <b style={{color: \"#ffe26a\"}}>Single Page Application</b> to track your exercises.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</header>\n\t\t\t\t</section>\n\t\t\t\t<main>\n\t\t\t\t\t<div className=\"App-table\">\n\t\t\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t\t\t<HomePage setExerciseToEdit={setExerciseToEdit} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/add\">\n\t\t\t\t\t\t\t<AddPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/edit\">\n\t\t\t\t\t\t\t<EditPage exerciseToEdit={exerciseToEdit} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t\t<footer id=\"App-footer\"> &copy; 2022 Jonathan Green </footer>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}